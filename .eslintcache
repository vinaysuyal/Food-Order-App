[{"D:\\Study Material\\Food-Order-App\\src\\index.js":"1","D:\\Study Material\\Food-Order-App\\src\\reportWebVitals.js":"2","D:\\Study Material\\Food-Order-App\\src\\App.js":"3","D:\\Study Material\\Food-Order-App\\src\\Context\\authcontext.js":"4","D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartContext.js":"5","D:\\Study Material\\Food-Order-App\\src\\Components\\Layout\\HeaderComponent.js":"6","D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SignInSignUp.js":"7","D:\\Study Material\\Food-Order-App\\src\\Components\\Layout\\MainComponent.js":"8","D:\\Study Material\\Food-Order-App\\src\\Components\\Hooks\\use-request.js":"9","D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartButton.js":"10","D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SignInUpToggler.js":"11","D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SingUp.js":"12","D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SignIn.js":"13","D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartModal.js":"14","D:\\Study Material\\Food-Order-App\\src\\Components\\Meal\\MealList.js":"15","D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartIcon.js":"16","D:\\Study Material\\Food-Order-App\\src\\Components\\Meal\\Meal.js":"17","D:\\Study Material\\Food-Order-App\\src\\Components\\UI\\Card.js":"18","D:\\Study Material\\Food-Order-App\\src\\Components\\Meal\\AddRemoveForm.js":"19","D:\\Study Material\\Food-Order-App\\src\\Icons\\LogOutIcon.js":"20"},{"size":801,"mtime":1696952870399,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1696952870399,"results":"23","hashOfConfig":"22"},{"size":745,"mtime":1696952870383,"results":"24","hashOfConfig":"22"},{"size":1887,"mtime":1696952870399,"results":"25","hashOfConfig":"22"},{"size":3871,"mtime":1696952870383,"results":"26","hashOfConfig":"22"},{"size":1550,"mtime":1696958786113,"results":"27","hashOfConfig":"22"},{"size":826,"mtime":1696952870383,"results":"28","hashOfConfig":"22"},{"size":1769,"mtime":1696961587723,"results":"29","hashOfConfig":"22"},{"size":1179,"mtime":1696961818152,"results":"30","hashOfConfig":"22"},{"size":432,"mtime":1696954020840,"results":"31","hashOfConfig":"22"},{"size":1095,"mtime":1696952870383,"results":"32","hashOfConfig":"22"},{"size":2306,"mtime":1696961954444,"results":"33","hashOfConfig":"22"},{"size":1895,"mtime":1696961884996,"results":"34","hashOfConfig":"22"},{"size":2535,"mtime":1696963910488,"results":"35","hashOfConfig":"22"},{"size":1317,"mtime":1696961687982,"results":"36","hashOfConfig":"22"},{"size":853,"mtime":1696956529268,"results":"37","hashOfConfig":"22"},{"size":1124,"mtime":1696952870383,"results":"38","hashOfConfig":"22"},{"size":229,"mtime":1696952870383,"results":"39","hashOfConfig":"22"},{"size":657,"mtime":1696952870383,"results":"40","hashOfConfig":"22"},{"size":413,"mtime":1696955899611,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qkhvje",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\Study Material\\Food-Order-App\\src\\index.js",[],"D:\\Study Material\\Food-Order-App\\src\\reportWebVitals.js",[],"D:\\Study Material\\Food-Order-App\\src\\App.js",["93","94","95"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport SignInSignUp from \"./Components/Auth/SignInSignUp\";\r\nimport AuthContextProvider, { AuthContext } from \"./Context/authcontext\";\r\nimport { useContext } from \"react\";\r\nimport HeaderComponent from \"./Components/Layout/HeaderComponent\";\r\nimport MainComponent from \"./Components/Layout/MainComponent\";\r\nimport { CartManagerComponent } from \"./Components/Cart/CartContext\";\r\nfunction App() {\r\n  const authContext = useContext(AuthContext);\r\n  return (\r\n    <>\r\n      <HeaderComponent />\r\n      {!authContext.isLoggedIn && <SignInSignUp />}\r\n      {authContext.isLoggedIn && (\r\n        <>        \r\n            <MainComponent />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Study Material\\Food-Order-App\\src\\Context\\authcontext.js",["96"],"import { createContext, useEffect, useState, useCallback } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  authToken: \"\",\r\n  isLoggedIn: false,\r\n  loginHandler: () => {},\r\n  logOutHandler: () => {},\r\n});\r\n\r\nlet autoOutLogger = null;\r\n\r\nconst expiryTimeCalculator = (expiryTime) => {\r\n  return new Date(new Date().getTime() + parseInt(expiryTime) * 1000);\r\n};\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [isLoggedIn, changeLoginStatus] = useState(false);\r\n  const [authToken, setAuthToken] = useState(\"\");\r\n  const loginHandler = useCallback((authToken, expiryTime) => {\r\n    changeLoginStatus(true);\r\n    setAuthToken(authToken);\r\n    localStorage.setItem(\"auth-token\", authToken);\r\n    localStorage.setItem(\"expiry-time\", expiryTimeCalculator(expiryTime));\r\n    autoOutLogger = setTimeout(() => {\r\n      logOutHandler();\r\n      alert('logging out');\r\n    }, parseInt(expiryTime) * 1000);\r\n  });\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem(\"auth-token\");\r\n    const expiryTime = localStorage.getItem(\"expiry-time\");\r\n    if (authToken && expiryTime) {\r\n      const expiryTimeLeft = new Date(expiryTime).getTime() - new Date().getTime();\r\n      if(expiryTimeLeft <= 0)\r\n      {\r\n        logOutHandler();\r\n      }\r\n      else\r\n      loginHandler(authToken, expiryTimeLeft/1000);\r\n    }\r\n    else logOutHandler();\r\n  }, [loginHandler]);\r\n  const logOutHandler = () => {\r\n    changeLoginStatus(false);\r\n    clearTimeout(autoOutLogger);\r\n    localStorage.removeItem(\"auth-token\");\r\n    localStorage.removeItem(\"expiry-time\");\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        authToken: authToken,\r\n        isLoggedIn: isLoggedIn,\r\n        loginHandler: loginHandler,\r\n        logOutHandler: logOutHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartContext.js",["97","98","99","100"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { AuthContext } from \"../../Context/authcontext\";\r\nimport useRequest from \"../Hooks/use-request\";\r\n\r\nconst CartContext = React.createContext({\r\n  cartData: [],\r\n  count: 0,\r\n  dispatchCartData: () => {},\r\n});\r\n\r\nexport const CartManagerComponent = (props) => {\r\n  const {isLoggedIn} = useContext(AuthContext);\r\n  const hasStarted = useRef(true);\r\n  const [cartState, dispatchCartData] = useReducer(updateCart, {\r\n    cartData: [],\r\n    count: 0,\r\n    dispatchCartData: () => {},\r\n  });\r\n  const [isListLoading, requestEncounteredError, fetchData] = useRequest();\r\n  const setCartState = (data) => {\r\n    console.log(data);\r\n    const cartData = data ? data.cartData  : [];\r\n    dispatchCartData({\r\n        type:'SetCart',\r\n        newCartData: cartData,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if(!isLoggedIn)\r\n        return;\r\n    if(!hasStarted.current) {\r\n        localStorage.setItem('cart',JSON.stringify(cartState));\r\n      //Following code needs to be implemented if cart data is to be stored in database\r\n        // const timeOut = setTimeout(async () => {\r\n        //     await fetchData(\"cart\", null, {\r\n        //         method: \"PUT\",\r\n        //         headers: {\r\n        //           \"Content-Type\": \"application/json\",\r\n        //         },\r\n        //         body: JSON.stringify(cartState),\r\n        //       });\r\n        // }, 500)\r\n        // return () => {clearTimeout(timeOut)};\r\n    }  \r\n    else \r\n    hasStarted.current = false;\r\n  }, [cartState]);\r\n\r\n  useEffect(\r\n    () => {\r\n      if(!isLoggedIn)\r\n        return;\r\n      const localCartState = JSON.parse(localStorage.getItem('cart'));\r\n      console.log(localCartState);\r\n      setCartState(localCartState);\r\n      hasStarted.current = true;\r\n      //Following code needs to be implemented if cart data is to be stored in database\r\n      //  const fetchAsync = async () => {\r\n      //       await fetchData(\"cart\", setCartState);\r\n      //   }\r\n      //   fetchAsync();\r\n    } \r\n    ,[isLoggedIn])\r\n  const [isCartVisible, changeCartVisibility] = useState(false);\r\n\r\n  const cartDataDispatchHandler = (action) => {\r\n    action.fetchData = fetchData;\r\n    dispatchCartData(action);\r\n  };\r\n  const cartVisibilityHandler = (newVisibility) => {\r\n    changeCartVisibility(newVisibility);\r\n  };\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartData: cartState.cartData,\r\n        count: cartState.cartData.length,\r\n        isCartVisible: isCartVisible,\r\n        dispatchCartData: cartDataDispatchHandler,\r\n        cartVisibilityHandler: cartVisibilityHandler,\r\n        requestEncounteredError: requestEncounteredError,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nconst updateCart = (prevState, action) => {\r\n  if (action.type === \"EditCart\") {\r\n    const matchingItemInCart = prevState.cartData.find(\r\n      (item) => action.newCartData.id === item.id\r\n    );\r\n    if (!matchingItemInCart) {\r\n      if (action.reps == 0) return prevState;\r\n      const updatedCartData = [...prevState.cartData, action.newCartData];\r\n      action.newCartData.reps = action.reps;\r\n      return {\r\n        cartData: [...updatedCartData],\r\n        count: updatedCartData.length,\r\n      };\r\n    }\r\n    const updatedCartData = prevState.cartData.filter((item) => {\r\n      if (item.id === action.newCartData.id) {\r\n        item.reps = action.reps;\r\n      }\r\n      if (item.reps == 0) return false;\r\n      return true;\r\n    });\r\n    return {\r\n      cartData: [...updatedCartData],\r\n      count: updatedCartData.length,\r\n    };\r\n  }\r\n  if (action.type === \"SetCart\")\r\n  {\r\n    return {\r\n        cartData: [...action.newCartData],\r\n        count: action.newCartData.length,\r\n      };\r\n  }\r\n  return prevState;\r\n};\r\n\r\nexport default CartContext;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Layout\\HeaderComponent.js",["101","102"],"import CartButton from \"../Cart/CartButton\";\r\nimport CartContext from \"../Cart/CartContext\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CartModal from \"../Cart/CartModal\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport \"./HeaderComponent.css\";\r\nimport { AuthContext } from \"../../Context/authcontext\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport LogoutIcon from \"../../Icons/LogOutIcon\";\r\n\r\nconst HeaderComponent = (props) => {\r\n  const cartContext = useContext(CartContext);\r\n  const authContext = useContext(AuthContext);\r\n  const logOutButtonHandler = () => {\r\n    authContext.logOutHandler();\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <>\r\n        <nav className=\"header-bar\">\r\n          <div className=\"left-nav\">\r\n            <h1>Momo Central</h1>\r\n          </div>\r\n          {authContext.isLoggedIn && (\r\n            <div key={cartContext.count} className=\"right-nav\">\r\n              <div\r\n                onClick={() => {\r\n                  cartContext.cartVisibilityHandler(true);\r\n                }}\r\n              >\r\n                <CartIcon />\r\n                <span>Cart ({cartContext.count})</span>\r\n              </div>\r\n              <span id=\"signOutButton\" onClick={logOutButtonHandler}>\r\n                <LogoutIcon />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </nav>\r\n      </>\r\n      {cartContext.isCartVisible &&\r\n        ReactDOM.createPortal(\r\n          <CartModal />,\r\n          document.getElementById(\"CartPortal\")\r\n        )}\r\n    </header>\r\n  );\r\n};\r\nexport default HeaderComponent;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SignInSignUp.js",["103","104"],"import { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../Context/authcontext\";\r\nimport SignIn from \"./SignIn\";\r\nimport \"./signInUp.css\";\r\nimport SignInUpToggler from \"./SignInUpToggler\";\r\nimport SignUpForm from \"./SingUp\";\r\n\r\nconst SignInSignUp = () => {\r\n  const [currentAuthPage, setCurrentAuthPage] = useState(\"SignIn\");\r\n  const formChangeHandler = (newAuthPage) => {\r\n    if(newAuthPage === 'SignIn' || newAuthPage === 'SignUp')\r\n    {\r\n        setCurrentAuthPage(newAuthPage);\r\n    }\r\n    //else dispatch snackbar\r\n  }\r\n  return (\r\n    <div >\r\n      <SignInUpToggler value = {currentAuthPage} changeHandler = {formChangeHandler} />\r\n      {currentAuthPage === \"SignIn\" && <SignIn />}\r\n      {currentAuthPage === \"SignUp\" && <SignUpForm />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInSignUp;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Layout\\MainComponent.js",["105"],"import { useMemo } from \"react\";\r\nimport MealList from \"../Meal/MealList\";\r\nimport Image from \"../assets/momos.jpg\";\r\nimport \"./MainComponent.css\";\r\n\r\nconst message_array = [\r\n  \"Enjoying life’s little 🥟momo-ments.\",\r\n  \"These dumplings got me filling like I want mo’ momo.\",\r\n  \"Either stea med or fried my love💜 for them is endless\",\r\n  \"Let the cheese🧀 dissolve.\",\r\n  \"Savoring the Art of Momo Making. 🥟\",\r\n  \"Where Every Bite is a Momo Masterpiece. 🎨\",\r\n  \"Elevate Your Taste Buds with Our Momo Magic. ✨\",\r\n  \"Bringing Himalayan Bliss to Your Plate, One Momo at a Time. 🏔️\",\r\n  \"Momo Moments, Made Memorable. 📸\",\r\n  \"Dumplings That Define Delicious. 😋\",\r\n  \"Steamed to Perfection, Savored with Affection. ❤️\",\r\n  \"Taste the Tradition, Love the Flavor. 🥢\",\r\n  \"Momo Bliss in Every Bite. 😃\",\r\n  \"Where Momo Dreams Come True. ✨\",\r\n  \"Fill Your Heart with Momo Love. ❤️\",\r\n  \"Creating Smiles, One Momo at a Time. 😄\",\r\n  \"Momo Magic - Your Culinary Adventure Awaits! 🌟\",\r\n  \"Momo, Love, and Happiness in Every Bite. ❤️\",\r\n  \"Crafting Happiness, One Momo at a Time. 😊\",\r\n  \"From the Himalayas with Love: Momo Moments. 🏔️\",\r\n  \"Satisfy Your Cravings, Momo Style. 😍\",\r\n  \"Steamed Goodness, Handcrafted Greatness. 🌄\",\r\n  \"Momo Heaven: Where Flavor Takes Flight. 🌈\",\r\n  \"Taste the Difference, Taste the Momo. 🍽️\",\r\n];\r\n\r\nconst MainComponent = (props) => {\r\n  const message = useMemo(() => {\r\n    return message_array[Math.floor(message_array.length * Math.random())];\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"chillam-logo\">\r\n        <img src={Image}></img>\r\n        <h4>{message}</h4>\r\n      </div>\r\n      <MealList />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Hooks\\use-request.js",[],["106","107"],"D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartButton.js",["108"],"import { useContext, useEffect } from \"react\";\r\nimport CartContext from \"./CartContext\";\r\nimport CartIcon from \"./CartIcon\";\r\nconst CartButton = (props) => {\r\n  const cartContext = useContext(CartContext);\r\n  return (\r\n    <button onClick={props.onClick}>\r\n      <span>\r\n        <CartIcon />\r\n      </span>\r\n      <span>My Cart </span>\r\n      <span>{cartContext.count}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CartButton;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SignInUpToggler.js",[],"D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SingUp.js",[],"D:\\Study Material\\Food-Order-App\\src\\Components\\Auth\\SignIn.js",[],"D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartModal.js",["109"],"import { useContext } from \"react\";\r\nimport Meal from \"../Meal/Meal\";\r\nimport Card from \"../UI/Card\";\r\nimport CartContext from \"./CartContext\";\r\nimport \"./CartModal.css\";\r\nimport crossIcon from \"../assets/cross.png\";\r\n\r\nconst CartModal = () => {\r\n  const cartContext = useContext(CartContext);\r\n  const cartData = cartContext.cartData;\r\n  let totalCharge = 0;\r\n  const orderHandler = (event) => {\r\n    alert(\"This is a Demo Project. Ordering not supported\");\r\n  };\r\n  const getItemList = () => {\r\n    return cartData.map((item) => {\r\n      totalCharge += item.price * item.reps;\r\n      return <Meal key={item.id} mealData={item} />;\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"clickBlocker\"></div>\r\n      <Card className=\"cartModal\">\r\n        <img\r\n          className=\"cart-close\"\r\n          onClick={() => {\r\n            cartContext.cartVisibilityHandler(false);\r\n          }}\r\n          src={crossIcon}\r\n        ></img>\r\n        <h1> My Cart </h1>\r\n        {cartData.length > 0 && (\r\n          <>\r\n            <ul> {getItemList()}</ul>\r\n            <div className=\"checkoutPrompter\">\r\n              <h2>Total: ₹ {totalCharge.toFixed(2)}</h2>\r\n              <button onClick={orderHandler} style={{ fontWeight: \"bold\" }}>\r\n                Feed me Momos\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n        {cartData.length === 0 && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"240\"\r\n              height=\"240\"\r\n            >\r\n              <path d=\"M4.00436 6.41662L0.761719 3.17398L2.17593 1.75977L5.41857 5.00241H20.6603C21.2126 5.00241 21.6603 5.45012 21.6603 6.00241C21.6603 6.09973 21.6461 6.19653 21.6182 6.28975L19.2182 14.2898C19.0913 14.7127 18.7019 15.0024 18.2603 15.0024H6.00436V17.0024H17.0044V19.0024H5.00436C4.45207 19.0024 4.00436 18.5547 4.00436 18.0024V6.41662ZM5.50436 23.0024C4.67593 23.0024 4.00436 22.3308 4.00436 21.5024C4.00436 20.674 4.67593 20.0024 5.50436 20.0024C6.33279 20.0024 7.00436 20.674 7.00436 21.5024C7.00436 22.3308 6.33279 23.0024 5.50436 23.0024ZM17.5044 23.0024C16.6759 23.0024 16.0044 22.3308 16.0044 21.5024C16.0044 20.674 16.6759 20.0024 17.5044 20.0024C18.3328 20.0024 19.0044 20.674 19.0044 21.5024C19.0044 22.3308 18.3328 23.0024 17.5044 23.0024Z\"></path>\r\n            </svg>\r\n            <h2>Your Cart is Empty.</h2>\r\n          </div>\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartModal;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Meal\\MealList.js",["110","111"],"import Card from \"../UI/Card\";\r\nimport Meal from \"./Meal\";\r\nimport \"./MealList.css\";\r\nimport useRequest from \"../Hooks/use-request\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport momosGIF from \"../assets/momos.gif\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst MealList = (props) => {\r\n  const [DUMMY_MEALS, setDummyMeals] = useState([]);\r\n  const [isListLoading, requestEncounteredError, fetchData] = useRequest();\r\n  useEffect(() => {\r\n    fetchData(\"meals\", setDummyMeals);\r\n  }, [fetchData]);\r\n  const getMealList = Object.keys(DUMMY_MEALS).map((id) => (\r\n    <Meal\r\n      key={id}\r\n      mealData={{\r\n        ...DUMMY_MEALS[id],\r\n        id,\r\n      }}\r\n    />\r\n  ));\r\n  return (\r\n    <>\r\n      {isListLoading &&\r\n        ReactDOM.createPortal(\r\n          <>\r\n            <div className=\"clickBlocker2\"></div>\r\n            <img\r\n              className=\"momo-gif\"\r\n              style={{ width: \"30vw\" }}\r\n              src={momosGIF}\r\n            />\r\n          </>,\r\n          document.getElementById(\"CartPortal\")\r\n        )}\r\n      <Card className=\"mealList\">\r\n        {requestEncounteredError && (\r\n          <p>Ooops.. Please check your internet Connection</p>\r\n        )}\r\n        {!isListLoading && <ul>{getMealList}</ul>}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealList;\r\n","D:\\Study Material\\Food-Order-App\\src\\Components\\Cart\\CartIcon.js",[],"D:\\Study Material\\Food-Order-App\\src\\Components\\Meal\\Meal.js",[],"D:\\Study Material\\Food-Order-App\\src\\Components\\UI\\Card.js",[],"D:\\Study Material\\Food-Order-App\\src\\Components\\Meal\\AddRemoveForm.js",["112"],"const AddRemoveForm = (props) => {\r\n  const onChangeEventHandler = (event) => {\r\n    event.preventDefault();\r\n    if(event.target.name === '+')\r\n        props.onChange(props.value + 1);\r\n    else if(props.value == 0) return;\r\n    else props.onChange(props.value - 1);\r\n    //props.onChange(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n    <div className=\"addRemoveForm\">\r\n      <button style={{color:'#2a2c41'}} onClick={onChangeEventHandler} name='-'>-</button>\r\n      <span>{props.value}</span>\r\n      <button style={{color:'#2a2c41'}} onClick={onChangeEventHandler} name='+'>+</button>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddRemoveForm;\r\n","D:\\Study Material\\Food-Order-App\\src\\Icons\\LogOutIcon.js",[],{"ruleId":"113","severity":1,"message":"114","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":12},{"ruleId":"113","severity":1,"message":"117","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":27},{"ruleId":"113","severity":1,"message":"118","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":19,"column":24,"nodeType":"115","endLine":19,"endColumn":35},{"ruleId":"113","severity":1,"message":"121","line":20,"column":10,"nodeType":"115","messageId":"116","endLine":20,"endColumn":23},{"ruleId":"119","severity":1,"message":"122","line":48,"column":6,"nodeType":"123","endLine":48,"endColumn":17,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":96,"column":23,"nodeType":"127","messageId":"128","endLine":96,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":108,"column":21,"nodeType":"127","messageId":"128","endLine":108,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"130","line":5,"column":22,"nodeType":"115","messageId":"116","endLine":5,"endColumn":29},{"ruleId":"113","severity":1,"message":"131","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":20},{"ruleId":"113","severity":1,"message":"132","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":41,"column":9,"nodeType":"135","endLine":41,"endColumn":26},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"113","severity":1,"message":"140","line":1,"column":22,"nodeType":"115","messageId":"116","endLine":1,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":25,"column":9,"nodeType":"135","endLine":31,"endColumn":10},{"ruleId":"113","severity":1,"message":"141","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":30,"column":13,"nodeType":"135","endLine":34,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":6,"column":25,"nodeType":"127","messageId":"128","endLine":6,"endColumn":27},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'AuthContextProvider' is defined but never used.","'CartManagerComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'isListLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["142"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CartButton' is defined but never used.","'useMemo' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.",{"desc":"145","fix":"146"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [cartState, isLoggedIn]",{"range":"147","text":"148"},[1581,1592],"[cartState, isLoggedIn]"]